find_career_page_task:
  description: >
    Research the company '{company_name}' to find the URL of their official careers/jobs page.
    Start by searching for '{company_name} careers' or '{company_name} jobs'.
    If the initial search result seems like a general page, use the Firecrawl URL Mapper tool
    on the company's main domain to find links containing 'careers' or 'jobs'.
    Verify the URL seems correct and belongs to the official company domain.
  expected_output: >
    The single, most likely URL for the company's careers page. For example: 'https://company.com/careers'.

scrape_jobs_task:
  description: >
    Take the careers page URL provided by the previous task's output.
    Use the Firecrawl Job Extractor tool to scrape all job listings from that URL.
    Ensure the output is structured according to the Job Listing schema.
  expected_output: >
    A JSON object containing a list of structured job listings extracted from the URL.
    Example: {"jobs": [{"title": "Software Engineer", "location": "Remote", "description": "...", "url": "..."}, ...]}

analyze_resume_task:
  description: >
    Read and analyze the resume file located at '{resume_path}'.
    Extract the candidate's key skills (technical and soft), work experience (job titles, companies, duration),
    educational background, and any notable achievements or projects.
  expected_output: >
    A structured text summary of the resume, highlighting:
    - Key Skills: (List of skills)
    - Work Experience Summary: (Brief overview of roles and years of experience)
    - Education: (Highest degree, institution)
    - Key Achievements/Projects: (Bullet points, if mentioned)

match_jobs_task:
  description: >
    Compare the resume summary (from the analyze_resume_task output) with the list of
    scraped job listings (from the scrape_jobs_task output).
    Identify the top 3-5 jobs that are the best match for the candidate's profile.
    Consider skills overlap, experience level, and job responsibilities.
  expected_output: >
    A ranked list of the top 3-5 matching jobs, including:
    - Job Title
    - Company (if available in scraped data)
    - Location (if available)
    - URL (if available)
    - Brief justification for why it's a good match (e.g., "Strong match for Python and Cloud skills").